@using Autopartner.Task.Core.Items.Queries.GetItems;
@using Autopartner.Task.Infrastructure.DAL.Entities;
@using MediatR;
@using MudBlazor;
@inject IMediator _mediator

<MudTable T="ItemEntity" Items="@Items" MultiSelection="true" SelectedItemsChanged="@SelectedItemsChanged" Hover="true">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Price</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Price">@context.Price</MudTd>
    </RowTemplate>
</MudTable>
@code {
    public ICollection<ItemEntity>? Items { get; set; }

    [Parameter]
    public HashSet<ItemEntity> SelectedItems { get; set; } = null!;
    [Parameter]
    public EventCallback<HashSet<ItemEntity>> SelectedItemsChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        SelectedItems = new HashSet<ItemEntity>();
        Items = await _mediator.Send(new GetItemsQuery());
    }
}