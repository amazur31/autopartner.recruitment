@using Autopartner.Task.Core.Orders.Queries.GetOrders;
@using Autopartner.Task.Infrastructure.DAL.Entities;
@using MediatR;
@using MudBlazor;
@inject IMediator _mediator;

<MudDataGrid Hover=true SelectedItemChanged="SelectedItemChanged" Items="@Orders">
    <Columns>
        <PropertyColumn Property="x => x!.Id"/>
        <PropertyColumn Property="x => x!.CustomerName" />
        <PropertyColumn Property="x => x!.CreatedAt" />
        <PropertyColumn Property="x => x!.ModifiedAt" />
    </Columns>
</MudDataGrid>

@code {
    private IEnumerable<OrderEntity> Orders = new List<OrderEntity>();
    [Parameter]
    public OrderEntity? SelectedItem { get; set; }

    [Parameter]
    public EventCallback<OrderEntity> SelectedItemChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    public async Task Refresh()
    {
        Orders = await _mediator.Send(new GetOrdersQuery());
        StateHasChanged();
    }
}