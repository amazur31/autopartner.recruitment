@using Autopartner.Task.Core.Items.Queries.GetItems;
@using Autopartner.Task.Core.Orders.Commands.CreateOrder;
@using Autopartner.Task.Infrastructure.DAL.Entities;
@using Autopartner.Task.App.Pages.Items;
@using MediatR;
@using MudBlazor
@inject IMediator _mediator;

<MudDialog>
    <DialogContent>
        <EditForm Model="@Model" style="width:100%">
            <MudGrid>
                <MudItem xs="12" sm="7">
                    <MudCard>
                        <MudCardContent>
                            <MudTextField Label="Account number"
                            @bind-Value="Model.AccountNumber" />
                            <MudTextField Label="Customer name"
                            @bind-Value="Model.CustomerName" />
                            <ItemsDataGrid SelectedItems="SelectedItems"></ItemsDataGrid>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="Save">Save</MudButton>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Secondary" Class="ml-auto" OnClick="Back">Back</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </EditForm>
    </DialogContent>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;
    public CreateOrderCommand Model = new CreateOrderCommand();
    private HashSet<ItemEntity> SelectedItems { get; set; } = null!;

    void Save()
    {
        Model.SelectedItems = new List<SelectedItem>();
        foreach(var selected in SelectedItems)
        {
            Model.SelectedItems.Add(new SelectedItem(selected.Id, 1));
        }
        _mediator.Send(Model);
        MudDialog.Close();
    }
    void Back()
    {
        MudDialog.Cancel();
    }
}